<?xml version="1.0" encoding="UTF-8"?><intel_fpga_monitor_program_sample_program version="1.0">
	<sample_text>
		<sample_title>Interrupt Example</sample_title>
		<sample_description>This program demonstrates use of interrupts with assembly code.</sample_description>
		<sample_details>
			It first starts two timers: an HPS timer, and the Altera interval timer (in the FPGA). The program responds to interrupts from these timers in addition to the pushbutton KEYs in the FPGA.

			The interrupt service routine for the HPS timer causes the main program to flash the green light connected to the HPS GPIO1 port.
			The interrupt service routine for the interval timer displays a pattern on the LEDs, and shifts this pattern either left or right.
			The shifting direction is set in the pushbutton interrupt service routine; it is reversed each time a KEY is pressed.
		</sample_details>
	</sample_text>
	<arch_version>
		<architecture>ARM Cortex-A9</architecture>
		<associated_sample_systems>
			<associated_sample_system>DE0-Nano-SoC Computer for ARM Cortex-A9</associated_sample_system>
			<associated_sample_system>DE1-SoC Computer for ARM Cortex-A9</associated_sample_system>
			<associated_sample_system>DE10-Nano Computer for ARM Cortex-A9</associated_sample_system>
			<associated_sample_system>DE10-Standard Computer for ARM Cortex-A9</associated_sample_system>
		</associated_sample_systems>
		<linker_sections_type>Exceptions</linker_sections_type>			
		<program>
			<type>Assembly Program</type>
			<source_files>
				<source_file filepath="true">arm/asm/interrupt_example/interrupt_example.s</source_file>
				<source_file filepath="true">arm/asm/interrupt_example/exceptions.s</source_file>
				<source_file filepath="true">arm/asm/interrupt_example/hps_timer_isr.s</source_file>
				<source_file filepath="true">arm/asm/interrupt_example/key_isr.s</source_file>
				<source_file filepath="true">arm/asm/interrupt_example/interval_timer_isr.s</source_file>
				<source_file filepath="true">arm/asm/interrupt_example/defines.s</source_file>
				<source_file filepath="true">arm/asm/interrupt_example/interrupt_ID.s</source_file>
			</source_files>
			<options>
				<start_symbol>_start</start_symbol>
			</options>
		</program>
		<program>
			<type>C Program</type>
			<source_files>
				<source_file filepath="true">arm/c/interrupt_example/interrupt_example.c</source_file>
				<source_file filepath="true">arm/c/interrupt_example/exceptions.c</source_file>
				<source_file filepath="true">arm/c/interrupt_example/HPS_timer_ISR.c</source_file>
				<source_file filepath="true">arm/c/interrupt_example/interval_timer_ISR.c</source_file>
				<source_file filepath="true">arm/c/interrupt_example/pushbutton_ISR.c</source_file>
				<header_file filepath="true">arm/c/interrupt_example/defines.h</header_file>
				<header_file filepath="true">arm/c/interrupt_example/interrupt_ID.h</header_file>
			</source_files>
			<options>
				<compiler_flags>-g -O1</compiler_flags>
				<emulate_unimpl_instructions>false</emulate_unimpl_instructions>
				<use_small_c_library>false</use_small_c_library>
			</options>
		</program>
	</arch_version>
	<arch_version>
		<architecture>Nios II</architecture>
		<associated_sample_systems>
			<associated_sample_system>DE0-CV Computer for Nios II</associated_sample_system>	
			<associated_sample_system>DE0-Nano Computer for Nios II</associated_sample_system>
			<associated_sample_system>DE0-Nano-SoC Computer for Nios II</associated_sample_system>
			<associated_sample_system>DE1-SoC Computer for Nios II</associated_sample_system>
			<associated_sample_system>DE2-115 Computer for Nios II</associated_sample_system>
			<associated_sample_system>DE10-Lite Computer for Nios II</associated_sample_system>
			<associated_sample_system>DE10-Nano Computer for Nios II</associated_sample_system>
			<associated_sample_system>DE10-Standard Computer for Nios II</associated_sample_system>
			<associated_sample_system>VEEK Computer for Nios II</associated_sample_system>	
		</associated_sample_systems>
		<linker_sections_type>Exceptions</linker_sections_type>
		<program>
			<type>Assembly Program</type>
			<source_files>
				<source_file filepath="true">nios2/asm/interrupt_example/interrupt_example.s</source_file>
				<source_file filepath="true">nios2/asm/interrupt_example/exception_handler.s</source_file>
				<source_file filepath="true">nios2/asm/interrupt_example/interval_timer_ISR.s</source_file>
				<source_file filepath="true">nios2/asm/interrupt_example/pushbutton_ISR.s</source_file>
				<source_file filepath="true">nios2/asm/interrupt_example/globals.s</source_file>
			</source_files>
			<options>
				<start_symbol>_start</start_symbol>
			</options>
		</program>
		<program>
			<type>C Program</type>
			<source_files>
				<source_file filepath="true">nios2/c/interrupt_example/interrupt_example.c</source_file>
				<source_file filepath="true">nios2/c/interrupt_example/exception_handler.c</source_file>
				<source_file filepath="true">nios2/c/interrupt_example/interval_timer_ISR.c</source_file>
				<source_file filepath="true">nios2/c/interrupt_example/pushbutton_ISR.c</source_file>
				<header_file filepath="true">nios2/c/interrupt_example/nios2_ctrl_reg_macros.h</header_file>
				<header_file filepath="true">nios2/c/interrupt_example/globals.h</header_file>
			</source_files>
			<options>
				<compiler_flags>-g -O1 -ffunction-sections -fverbose-asm -fno-inline -mno-cache-volatile</compiler_flags>
				<emulate_unimpl_instructions>true</emulate_unimpl_instructions>
				<use_small_c_library>false</use_small_c_library>
			</options>
		</program>
	</arch_version>
</intel_fpga_monitor_program_sample_program>
